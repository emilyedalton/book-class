{"ast":null,"code":"import _defineProperty from \"/Users/emilydalton/Desktop/NU_Bootcamp/book-class/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/emilydalton/Desktop/NU_Bootcamp/book-class/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/emilydalton/Desktop/NU_Bootcamp/book-class/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/emilydalton/Desktop/NU_Bootcamp/book-class/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/emilydalton/Desktop/NU_Bootcamp/book-class/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/emilydalton/Desktop/NU_Bootcamp/book-class/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/emilydalton/Desktop/NU_Bootcamp/book-class/client/src/pages/Books.js\";\nimport React, { Component } from \"react\";\nimport DeleteBtn from \"../components/DeleteBtn\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport API from \"../utils/API\";\nimport { Link } from \"react-router-dom\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport { List, ListItem } from \"../components/List\";\nimport { Input, TextArea, FormBtn } from \"../components/Form\";\nimport Form from '../components/Form';\nimport BookPage from \"../components/BookPage\"; //shoudl be the collection fieldnames, so when you call the model it will update the\n\nvar Books =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Books, _Component);\n\n  function Books() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Books);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Books)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      books: [],\n      // title: '',\n      // author: '',\n      // description: '',\n      // image: '',\n      // link: '',\n      // selectedBookid: '',\n      searchTerm: \"\"\n    };\n\n    _this.search = function (query) {\n      API.search(query).then(function (res) {\n        return _this.setState({\n          books: res.data.items,\n          searchTerm: \"\"\n        }, console.log(res.data.items));\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    };\n\n    _this.deleteBook = function (id) {\n      API.deleteBook(id).then(function (res) {\n        return _this.loadBooks();\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    };\n\n    _this.handleInputChange = function (event) {\n      var value = event.target.value;\n      var name = event.target.name; // { name, value } = event.target;\n\n      _this.setState(_defineProperty({}, name, value));\n    };\n\n    _this.handleFormSubmit = function (event) {\n      event.preventDefault();\n\n      _this.search(_this.state.searchTerm);\n\n      console.log(_this.state.searchTerm) // .then(res =>\n      //   this.setState({ books: res.data.items})\n      // )\n      // if (this.state.title) {\n      // console.log(this.state.title)// this.search(this.setState.title)        \n      // .then(res.data => this.loadBooks())\n      ;\n    };\n\n    _this.bookSelectedHandler = function (id) {\n      _this.setState({\n        selectedBookid: id\n      });\n\n      alert(\"I'm SAVED\" + id);\n    };\n\n    _this.handleFormSave = function (bookData) {\n      console.log(bookData, \"i am book data\");\n      API.saveBook(bookData) // .then(alert(\"SAVED\") )\n      // .catch(err => console.log(err)) ;\n      // if (this.state.title) {\n      // console.log(this.state.title)// this.search(this.setState.title)        \n      // .then(res.data => this.loadBooks())\n      ;\n    };\n\n    return _this;\n  }\n\n  _createClass(Books, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, React.createElement(Jumbotron, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }), React.createElement(Form, {\n        searchT: this.state.searchTerm,\n        onChange: this.handleInputChange,\n        submit: this.handleFormSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }), React.createElement(Col, {\n        size: \"md-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }), this.state.books.length ? React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, this.state.books.map(function (book) {\n        return React.createElement(BookPage, {\n          key: book.id,\n          title: book.volumeInfo.title,\n          author: book.volumeInfo.authors,\n          image: book.volumeInfo.imageLinks.thumbnail,\n          description: book.volumeInfo.description,\n          link: book.volumeInfo.canonicalVolumeLink,\n          clickHandler: function clickHandler() {\n            _this2.handleFormSave({\n              title: book.volumeInfo.title,\n              author: book.volumeInfo.authors,\n              description: book.volumeInfo.description,\n              image: book.volumeInfo.imageLinks.thumbnail,\n              link: book.volumeInfo.canonicalVolumeLink,\n              savedBooks: \"true\"\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 156\n          },\n          __self: this\n        });\n      })) : React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, \"No Results to Display\"));\n    }\n  }]);\n\n  return Books;\n}(Component);\n\nexport default Books;","map":{"version":3,"sources":["/Users/emilydalton/Desktop/NU_Bootcamp/book-class/client/src/pages/Books.js"],"names":["React","Component","DeleteBtn","Jumbotron","API","Link","Col","Row","Container","List","ListItem","Input","TextArea","FormBtn","Form","BookPage","Books","state","books","searchTerm","search","query","then","res","setState","data","items","console","log","catch","err","deleteBook","id","loadBooks","handleInputChange","event","value","target","name","handleFormSubmit","preventDefault","bookSelectedHandler","selectedBookid","alert","handleFormSave","bookData","saveBook","length","map","book","volumeInfo","title","authors","imageLinks","thumbnail","description","canonicalVolumeLink","author","image","link","savedBooks"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport DeleteBtn from \"../components/DeleteBtn\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport API from \"../utils/API\";\nimport { Link } from \"react-router-dom\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport { List, ListItem } from \"../components/List\";\nimport { Input, TextArea, FormBtn } from \"../components/Form\";\nimport Form from '../components/Form'\nimport BookPage from \"../components/BookPage\";\n//shoudl be the collection fieldnames, so when you call the model it will update the\nclass Books extends Component {\n  state = {\n    books: [],\n    // title: '',\n    // author: '',\n    // description: '',\n    // image: '',\n    // link: '',\n    // selectedBookid: '',\n    searchTerm: \"\"\n  };\n\n  // componentDidMount() {\n  //   this.loadBooks();\n  // }\n//res.data.items was the magic thing to get the default term to work\n  // loadBooks = () => {\n  //   API.getBooks()\n  //     .then(res =>\n  //       this.setState({ books: res.data.items})\n  //     )\n  //     .catch(err => console.log(err));\n\n  // };\n  search = query =>{\n  API.search(query).then(res => this.setState( \n    {books: res.data.items,\n     searchTerm: \"\",\n    },\n    console.log(res.data.items)\n  )\n)\n.catch(err=> console.log(err));\n};\n    // if(!resp.ok){\n    //   if(resp.status >=400 && resp.status < 500){\n    //     return resp.json().then(data =>{\n    //       let err ={errorMessage:data.message};\n    //       throw err; \n    //     })\n    //   }\n    \n\n  deleteBook = id => {\n    API.deleteBook(id)\n      .then(res => this.loadBooks())\n      .catch(err => console.log(err));\n  };\n\n  handleInputChange = event => {\n    const value = event.target.value;\n    const name = event.target.name;\n    // { name, value } = event.target;\n    this.setState({\n      [name]: value\n    });\n  };\n\n  handleFormSubmit = event => {\n    event.preventDefault();\n    this.search(this.state.searchTerm)\n    console.log(this.state.searchTerm)\n    // .then(res =>\n    //   this.setState({ books: res.data.items})\n    // )\n    // if (this.state.title) {\n      // console.log(this.state.title)// this.search(this.setState.title)        \n      // .then(res.data => this.loadBooks())\n      ;\n  }\n  bookSelectedHandler = (id) =>{\n    this.setState({selectedBookid:id})\n    alert(\"I'm SAVED\"+ id)\n\n  }\n\n//   postDataHandler = (event) =>{\n//     this.setState({selectedBookid:true})\n\n//     const bookData ={\n//       // books: this.setState.books\n//  title: books.volumeInfo.title,\n//  author: book.volumeInfo.authors,\n//  description: book.volumeInfo.description,\n//  image: book.volumeInfo.imageLinks.thumbnail,\n//  link: book.volumeInfo.canonicalVolumeLink\n//     }\n//     event.preventDefault();\n// API.saveBook(bookData)\n// .then(response => {console.log(response);\n// })\n//   }\n\n\n  handleFormSave = bookData => {\n    console.log(bookData, \"i am book data\")\n    API.saveBook(bookData)\n\n    \n    // .then(alert(\"SAVED\") )\n    // .catch(err => console.log(err)) ;\n    \n    \n    // if (this.state.title) {\n      // console.log(this.state.title)// this.search(this.setState.title)        \n      // .then(res.data => this.loadBooks())\n      ;\n  }\n\n\n   \n\n  render() {\n    return (\n      <div className = \"container\">\n    \n            <Jumbotron>\n              {/* <h1>What Books Should I Read?</h1> */}\n            </Jumbotron>\n            \n            <Form\n                searchT ={this.state.searchTerm}\n                onChange={this.handleInputChange}\n                submit={this.handleFormSubmit}\n\n              />\n             \n              \n              {/* <FormBtn\n                // disabled={!(this.state.author && this.state.title)}\n                onClick={this.handleFormSubmit}\n              >\n                Submit Book\n              </FormBtn> */}\n              \n         \n          \n          <Col size=\"md-12\"/>\n            {/* <Jumbotron>\n              <h1>Recent Publications in Philosophy</h1>\n            </Jumbotron> */}\n            {this.state.books.length ? (\n              <div>\n              {this.state.books.map(book =>(\n                <BookPage key={book.id}\n                title={book.volumeInfo.title}\n                author ={book.volumeInfo.authors}\n                image={book.volumeInfo.imageLinks.thumbnail}\n                description={book.volumeInfo.description}\n                link={book.volumeInfo.canonicalVolumeLink}\n                clickHandler= {()=> {this.handleFormSave(\n                  {\n                  title: book.volumeInfo.title,\n                  author: book.volumeInfo.authors,\n                  description: book.volumeInfo.description,\n                  image: book.volumeInfo.imageLinks.thumbnail,\n                  link: book.volumeInfo.canonicalVolumeLink,\n                  savedBooks: \"true\"\n                })}}\n                />\n\n              ))}\n</div>\n          \n            ) \n            \n            :(\n              <h3>No Results to Display</h3>\n            )}\n            \n      \n            \n\n</div>\n\n          )\n        }} \nexport default Books;\n        "]},"metadata":{},"sourceType":"module"}