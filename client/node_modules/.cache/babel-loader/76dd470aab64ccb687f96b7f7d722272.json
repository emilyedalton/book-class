{"ast":null,"code":"import _defineProperty from \"/Users/emilydalton/Desktop/NU_Bootcamp/book-class/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/emilydalton/Desktop/NU_Bootcamp/book-class/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/emilydalton/Desktop/NU_Bootcamp/book-class/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/emilydalton/Desktop/NU_Bootcamp/book-class/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/emilydalton/Desktop/NU_Bootcamp/book-class/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/emilydalton/Desktop/NU_Bootcamp/book-class/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/emilydalton/Desktop/NU_Bootcamp/book-class/client/src/pages/Books.js\";\nimport React, { Component } from \"react\";\nimport DeleteBtn from \"../components/DeleteBtn\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport API from \"../utils/API\";\nimport { Link } from \"react-router-dom\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport { List, ListItem } from \"../components/List\";\nimport { Input, TextArea, FormBtn } from \"../components/Form\";\nimport BookPage from \"../components/BookPage\"; //shoudl be the collection fieldnames, so when you call the model it will update the\n\nvar Books =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Books, _Component);\n\n  function Books() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Books);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Books)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      books: [],\n      title: '',\n      author: '',\n      description: '',\n      image: '',\n      link: '',\n      selectedBookid: '' // search: \"\"\n\n    };\n\n    _this.loadBooks = function () {\n      API.getBooks().then(function (res) {\n        return _this.setState({\n          books: res.data.items\n        });\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    };\n\n    _this.search = function (query) {\n      API.search(query).then(function (res) {\n        return _this.setState({\n          books: res.data.items,\n          title: \"\"\n        });\n      });\n    };\n\n    _this.deleteBook = function (id) {\n      API.deleteBook(id).then(function (res) {\n        return _this.loadBooks();\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    };\n\n    _this.handleInputChange = function (event) {\n      var _event$target = event.target,\n          name = _event$target.name,\n          value = _event$target.value;\n\n      _this.setState(_defineProperty({}, name, value));\n    };\n\n    _this.handleFormSubmit = function (event) {\n      event.preventDefault();\n      API.search(_this.state.title).then(function (res) {\n        return _this.setState({\n          books: res.data.items\n        });\n      }).catch(function (err) {\n        return console.log(err);\n      });\n      ; // if (this.state.title) {\n      // console.log(this.state.title)// this.search(this.setState.title)        \n      // .then(res.data => this.loadBooks())\n\n      ;\n    };\n\n    _this.bookSelectedHandler = function (id) {\n      _this.setState({\n        selectedBookid: id\n      });\n\n      alert(\"I'm SAVED\" + id);\n    };\n\n    _this.handleFormSave = function (bookData) {\n      // event.preventDefault();\n      // if (this.state.title && this.state.author)\n      console.log(bookData, \"i am book data\"); // event.preventDefault();\n      // alert(\"SAVED\");\n\n      API.saveBook(bookData) // .then(alert(\"SAVED\") )\n      .catch(function (err) {\n        return console.log(err);\n      }); // if (this.state.title) {\n      // console.log(this.state.title)// this.search(this.setState.title)        \n      // .then(res.data => this.loadBooks())\n\n      ;\n    };\n\n    return _this;\n  }\n\n  _createClass(Books, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.loadBooks();\n    } //res.data.items was the magic thing to get the default term to work\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, React.createElement(Jumbotron, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }), React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        value: this.state.title,\n        onChange: this.handleInputChange,\n        name: \"title\",\n        placeholder: \"Search the Northwestern University Press catalog\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }), React.createElement(FormBtn // disabled={!(this.state.author && this.state.title)}\n      , {\n        clickHandler: this.handleFormSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, \"Submit Book\")), React.createElement(Col, {\n        size: \"md-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }), this.state.books.length ? React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, this.state.books.map(function (book) {\n        return React.createElement(BookPage, {\n          key: book.id,\n          title: book.volumeInfo.title,\n          author: book.volumeInfo.authors,\n          image: book.volumeInfo.imageLinks.thumbnail,\n          description: book.volumeInfo.description,\n          link: book.volumeInfo.canonicalVolumeLink,\n          clickedBook: _this2.handleFormSave({\n            title: book.volumeInfo.title,\n            author: book.volumeInfo.authors,\n            description: book.volumeInfo.description,\n            image: book.volumeInfo.imageLinks.thumbnail,\n            link: book.volumeInfo.canonicalVolumeLink,\n            savedBooks: \"true\"\n          }),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 153\n          },\n          __self: this\n        });\n      })) : React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }, \"No Results to Display\"));\n    }\n  }]);\n\n  return Books;\n}(Component);\n\nexport default Books;","map":{"version":3,"sources":["/Users/emilydalton/Desktop/NU_Bootcamp/book-class/client/src/pages/Books.js"],"names":["React","Component","DeleteBtn","Jumbotron","API","Link","Col","Row","Container","List","ListItem","Input","TextArea","FormBtn","BookPage","Books","state","books","title","author","description","image","link","selectedBookid","loadBooks","getBooks","then","res","setState","data","items","catch","err","console","log","search","query","deleteBook","id","handleInputChange","event","target","name","value","handleFormSubmit","preventDefault","bookSelectedHandler","alert","handleFormSave","bookData","saveBook","length","map","book","volumeInfo","authors","imageLinks","thumbnail","canonicalVolumeLink","savedBooks"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,GAAP,MAAgB,cAAhB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,GAAT,EAAcC,GAAd,EAAmBC,SAAnB,QAAoC,oBAApC;AACA,SAASC,IAAT,EAAeC,QAAf,QAA+B,oBAA/B;AACA,SAASC,KAAT,EAAgBC,QAAhB,EAA0BC,OAA1B,QAAyC,oBAAzC;AACA,OAAOC,QAAP,MAAqB,wBAArB,C,CACA;;IACMC,K;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,KAAK,EAAE,EADD;AAENC,MAAAA,KAAK,EAAE,EAFD;AAGNC,MAAAA,MAAM,EAAE,EAHF;AAINC,MAAAA,WAAW,EAAE,EAJP;AAKNC,MAAAA,KAAK,EAAE,EALD;AAMNC,MAAAA,IAAI,EAAE,EANA;AAONC,MAAAA,cAAc,EAAE,EAPV,CAQN;;AARM,K;;UAeRC,S,GAAY,YAAM;AAChBpB,MAAAA,GAAG,CAACqB,QAAJ,GACGC,IADH,CACQ,UAAAC,GAAG;AAAA,eACP,MAAKC,QAAL,CAAc;AAAEX,UAAAA,KAAK,EAAEU,GAAG,CAACE,IAAJ,CAASC;AAAlB,SAAd,CADO;AAAA,OADX,EAIGC,KAJH,CAIS,UAAAC,GAAG;AAAA,eAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAJ;AAAA,OAJZ;AAMD,K;;UACDG,M,GAAS,UAAAC,KAAK,EAAG;AACjBhC,MAAAA,GAAG,CAAC+B,MAAJ,CAAWC,KAAX,EAAkBV,IAAlB,CAAuB,UAAAC,GAAG;AAAA,eAAI,MAAKC,QAAL,CAC5B;AAACX,UAAAA,KAAK,EAAEU,GAAG,CAACE,IAAJ,CAASC,KAAjB;AACCZ,UAAAA,KAAK,EAAE;AADR,SAD4B,CAAJ;AAAA,OAA1B;AAKG,K;;UAUHmB,U,GAAa,UAAAC,EAAE,EAAI;AACjBlC,MAAAA,GAAG,CAACiC,UAAJ,CAAeC,EAAf,EACGZ,IADH,CACQ,UAAAC,GAAG;AAAA,eAAI,MAAKH,SAAL,EAAJ;AAAA,OADX,EAEGO,KAFH,CAES,UAAAC,GAAG;AAAA,eAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAJ;AAAA,OAFZ;AAGD,K;;UAEDO,iB,GAAoB,UAAAC,KAAK,EAAI;AAAA,0BACHA,KAAK,CAACC,MADH;AAAA,UACnBC,IADmB,iBACnBA,IADmB;AAAA,UACbC,KADa,iBACbA,KADa;;AAE3B,YAAKf,QAAL,qBACGc,IADH,EACUC,KADV;AAGD,K;;UAEDC,gB,GAAmB,UAAAJ,KAAK,EAAI;AAC1BA,MAAAA,KAAK,CAACK,cAAN;AACAzC,MAAAA,GAAG,CAAC+B,MAAJ,CAAW,MAAKnB,KAAL,CAAWE,KAAtB,EACCQ,IADD,CACM,UAAAC,GAAG;AAAA,eACP,MAAKC,QAAL,CAAc;AAAEX,UAAAA,KAAK,EAAEU,GAAG,CAACE,IAAJ,CAASC;AAAlB,SAAd,CADO;AAAA,OADT,EAICC,KAJD,CAIO,UAAAC,GAAG;AAAA,eAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAJ;AAAA,OAJV;AAIiC,OANP,CAMQ;AAChC;AACA;;AACA;AACH,K;;UACDc,mB,GAAsB,UAACR,EAAD,EAAO;AAC3B,YAAKV,QAAL,CAAc;AAACL,QAAAA,cAAc,EAACe;AAAhB,OAAd;;AACAS,MAAAA,KAAK,CAAC,cAAaT,EAAd,CAAL;AAED,K;;UAoBDU,c,GAAiB,UAAAC,QAAQ,EAAI;AAC3B;AACA;AAEAhB,MAAAA,OAAO,CAACC,GAAR,CAAYe,QAAZ,EAAsB,gBAAtB,EAJ2B,CAK3B;AACA;;AACA7C,MAAAA,GAAG,CAAC8C,QAAJ,CAAaD,QAAb,EAGA;AAHA,OAIClB,KAJD,CAIO,UAAAC,GAAG;AAAA,eAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAJ;AAAA,OAJV,EAP2B,CAWM;AAC/B;AACA;;AACA;AACH,K;;;;;;;wCA3FmB;AAClB,WAAKR,SAAL;AACD,K,CACH;;;;6BA6FW;AAAA;;AACP,aACE;AAAK,QAAA,SAAS,EAAG,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEM,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFN,EAMM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AACE,QAAA,KAAK,EAAE,KAAKR,KAAL,CAAWE,KADpB;AAEE,QAAA,QAAQ,EAAE,KAAKqB,iBAFjB;AAGE,QAAA,IAAI,EAAC,OAHP;AAIE,QAAA,WAAW,EAAC,kDAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EASE,oBAAC,OAAD,CACE;AADF;AAEE,QAAA,YAAY,EAAE,KAAKK,gBAFrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBATF,CANN,EAyBI,oBAAC,GAAD;AAAK,QAAA,IAAI,EAAC,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAzBJ,EA6BO,KAAK5B,KAAL,CAAWC,KAAX,CAAiBkC,MAAjB,GACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC,KAAKnC,KAAL,CAAWC,KAAX,CAAiBmC,GAAjB,CAAqB,UAAAC,IAAI;AAAA,eACxB,oBAAC,QAAD;AAAU,UAAA,GAAG,EAAEA,IAAI,CAACf,EAApB;AACA,UAAA,KAAK,EAAEe,IAAI,CAACC,UAAL,CAAgBpC,KADvB;AAEA,UAAA,MAAM,EAAGmC,IAAI,CAACC,UAAL,CAAgBC,OAFzB;AAGA,UAAA,KAAK,EAAEF,IAAI,CAACC,UAAL,CAAgBE,UAAhB,CAA2BC,SAHlC;AAIA,UAAA,WAAW,EAAEJ,IAAI,CAACC,UAAL,CAAgBlC,WAJ7B;AAKA,UAAA,IAAI,EAAEiC,IAAI,CAACC,UAAL,CAAgBI,mBALtB;AAMA,UAAA,WAAW,EAAE,MAAI,CAACV,cAAL,CACX;AACA9B,YAAAA,KAAK,EAAEmC,IAAI,CAACC,UAAL,CAAgBpC,KADvB;AAEAC,YAAAA,MAAM,EAAEkC,IAAI,CAACC,UAAL,CAAgBC,OAFxB;AAGAnC,YAAAA,WAAW,EAAEiC,IAAI,CAACC,UAAL,CAAgBlC,WAH7B;AAIAC,YAAAA,KAAK,EAAEgC,IAAI,CAACC,UAAL,CAAgBE,UAAhB,CAA2BC,SAJlC;AAKAnC,YAAAA,IAAI,EAAE+B,IAAI,CAACC,UAAL,CAAgBI,mBALtB;AAMAC,YAAAA,UAAU,EAAE;AANZ,WADW,CANb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADwB;AAAA,OAAzB,CADD,CADD,GA0BC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAvDR,CADF;AAiEK;;;;EA9KW1D,S;;AA+KpB,eAAec,KAAf","sourcesContent":["import React, { Component } from \"react\";\nimport DeleteBtn from \"../components/DeleteBtn\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport API from \"../utils/API\";\nimport { Link } from \"react-router-dom\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport { List, ListItem } from \"../components/List\";\nimport { Input, TextArea, FormBtn } from \"../components/Form\";\nimport BookPage from \"../components/BookPage\";\n//shoudl be the collection fieldnames, so when you call the model it will update the\nclass Books extends Component {\n  state = {\n    books: [],\n    title: '',\n    author: '',\n    description: '',\n    image: '',\n    link: '',\n    selectedBookid: ''\n    // search: \"\"\n  };\n\n  componentDidMount() {\n    this.loadBooks();\n  }\n//res.data.items was the magic thing to get the default term to work\n  loadBooks = () => {\n    API.getBooks()\n      .then(res =>\n        this.setState({ books: res.data.items})\n      )\n      .catch(err => console.log(err));\n\n  };\n  search = query =>{\n  API.search(query).then(res => this.setState( \n    {books: res.data.items,\n     title: \"\",\n    },\n    \n  ))};\n    // if(!resp.ok){\n    //   if(resp.status >=400 && resp.status < 500){\n    //     return resp.json().then(data =>{\n    //       let err ={errorMessage:data.message};\n    //       throw err; \n    //     })\n    //   }\n    \n\n  deleteBook = id => {\n    API.deleteBook(id)\n      .then(res => this.loadBooks())\n      .catch(err => console.log(err));\n  };\n\n  handleInputChange = event => {\n    const { name, value } = event.target;\n    this.setState({\n      [name]: value\n    });\n  };\n\n  handleFormSubmit = event => {\n    event.preventDefault();\n    API.search(this.state.title)\n    .then(res =>\n      this.setState({ books: res.data.items})\n    )\n    .catch(err => console.log(err)); ;// if (this.state.title) {\n      // console.log(this.state.title)// this.search(this.setState.title)        \n      // .then(res.data => this.loadBooks())\n      ;\n  }\n  bookSelectedHandler = (id) =>{\n    this.setState({selectedBookid:id})\n    alert(\"I'm SAVED\"+ id)\n\n  }\n\n//   postDataHandler = (event) =>{\n//     this.setState({selectedBookid:true})\n\n//     const bookData ={\n//       // books: this.setState.books\n//  title: books.volumeInfo.title,\n//  author: book.volumeInfo.authors,\n//  description: book.volumeInfo.description,\n//  image: book.volumeInfo.imageLinks.thumbnail,\n//  link: book.volumeInfo.canonicalVolumeLink\n//     }\n//     event.preventDefault();\n// API.saveBook(bookData)\n// .then(response => {console.log(response);\n// })\n//   }\n\n\n  handleFormSave = bookData => {\n    // event.preventDefault();\n    // if (this.state.title && this.state.author)\n\n    console.log(bookData, \"i am book data\")\n    // event.preventDefault();\n    // alert(\"SAVED\");\n    API.saveBook(bookData)\n\n    \n    // .then(alert(\"SAVED\") )\n    .catch(err => console.log(err)) ;// if (this.state.title) {\n      // console.log(this.state.title)// this.search(this.setState.title)        \n      // .then(res.data => this.loadBooks())\n      ;\n  }\n\n\n   \n\n  render() {\n    return (\n      <div className = \"container\">\n    \n            <Jumbotron>\n              {/* <h1>What Books Should I Read?</h1> */}\n            </Jumbotron>\n            \n            <form>\n              <input\n                value={this.state.title}\n                onChange={this.handleInputChange}\n                name=\"title\"\n                placeholder=\"Search the Northwestern University Press catalog\"\n              />\n             \n              \n              <FormBtn\n                // disabled={!(this.state.author && this.state.title)}\n                clickHandler={this.handleFormSubmit}\n              >\n                Submit Book\n              </FormBtn>\n              \n            </form>\n         \n          \n          <Col size=\"md-12\"/>\n            {/* <Jumbotron>\n              <h1>Recent Publications in Philosophy</h1>\n            </Jumbotron> */}\n            {this.state.books.length ? (\n              <div>\n              {this.state.books.map(book =>(\n                <BookPage key={book.id}\n                title={book.volumeInfo.title}\n                author ={book.volumeInfo.authors}\n                image={book.volumeInfo.imageLinks.thumbnail}\n                description={book.volumeInfo.description}\n                link={book.volumeInfo.canonicalVolumeLink}\n                clickedBook={this.handleFormSave(\n                  {\n                  title: book.volumeInfo.title,\n                  author: book.volumeInfo.authors,\n                  description: book.volumeInfo.description,\n                  image: book.volumeInfo.imageLinks.thumbnail,\n                  link: book.volumeInfo.canonicalVolumeLink,\n                  savedBooks: \"true\"\n                })}\n                />\n\n              ))}\n</div>\n          \n            ) \n            \n            :(\n              <h3>No Results to Display</h3>\n            )}\n            \n      \n            \n\n</div>\n\n          )\n        }} \nexport default Books;\n        "]},"metadata":{},"sourceType":"module"}